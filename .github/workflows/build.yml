name: ci

on:
  push:
    branches:
      - custom
  schedule:
    - cron: "* 23 * * *"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  ARCH: amd64

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Get Jenkins LTS version
        id: jenkins-version
        run: |
          echo "::set-output name=LTS_VERSION::$(curl -sL http://mirrors.jenkins.io/updates/stable/update-center.actual.json | jq -r .core.version)"

      - name: Get Jenkins LTS SHA
        id: jenkins-sha
        run: |
          echo "::set-output name=LTS_SHA::$(curl -sL https://get.jenkins.io/war-stable/${{ steps.jenkins-version.outputs.LTS_VERSION }}/jenkins.war.sha256 | cut -d' ' -f1)"

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/bake-action@master
        env:
          JENKINS_VERSION: ${{ steps.jenkins-version.outputs.LTS_VERSION }}
          JENKINS_SHA: ${{ steps.jenkins-sha.outputs.LTS_SHA }}
        with:
          push: true
          files: docker-bake.hcl
          targets: rhel_ocp_ubi8_jdk11
          set: |
            rhel_ocp_ubi8_jdk11.tags=${{ env.REGISTRY }}/${{ github.actor }}/${{ github.repository }}:ocp-${{ steps.jenkins-version.outputs.LTS_VERSION }}
            *.platform=linux/${{ env.ARCH }}
